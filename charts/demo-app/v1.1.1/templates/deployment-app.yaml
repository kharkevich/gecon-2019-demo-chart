---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.application.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.application.resources.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.application.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.application.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/port: "{{ .Values.application.service_port }}"
      #   prometheus.io/path: "/metrics"
      #   fluentbit.io/parser: json
    spec:
      containers:
        - name: {{ .Values.application.name }}
          env: {{ include "mysql.env" . | indent 12 }}
          image: "{{ .Values.application.container.image.repository }}:{{ .Values.application.container.image.tag }}"
          imagePullPolicy: {{ .Values.application.container.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.application.listen_port }}
              protocol: TCP
          {{- if .Values.application.healthcheck_enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            failureThreshold: 3
          {{- end }}
          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
